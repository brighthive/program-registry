#!/bin/bash -xe

# Allows to see errors as they occur
exec 2>&1

echo "Executing runtime hook ..."

export APP_SETTINGS="production"
export DATABASE_URL=postgresql://localhost:5432/registry

cd {{pkg.path}}

source {{pkg.svc_config_path}}/helpers.sh
start_db_server

echo "Creating the database"
# create a database for the application if one doesn't exist
exec chpst -U {{cfg.superuser.name}} -u {{cfg.superuser.name}} psql -d postgres -tc \
    "SELECT 1 FROM pg_database WHERE datname = 'registry';" | grep -q 1 \
    || psql -U {{cfg.superuser.name}} -d postgres -d postgres -c "CREATE database registry;"

# if [ $? -gt 0 ]; then
#  exec chpst -U {{cfg.superuser.name}} -u {{cfg.superuser.name}} createdb registry
# fi

# check to see if migrations folder is created
echo "Checking database migrations"
DIRECTORY="migrations"
if [ ! -d "$DIRECTORY" ]; then
    echo "Creating new migrations..."
    exec python manage.py db init
    exec python manage.py db migrate
    exec python manage.py db upgrade
else
    echo "Updating existing migrations..."
    exec python manage.py db migrate
    exec python manage.py db update
fi

# start the server using gunicorn
echo "Starting registry service ..."
exec gunicorn wsgi --bind 0.0.0.0:8080
