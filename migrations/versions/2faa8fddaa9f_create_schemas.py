"""Create all database schemas

Revision ID: 2faa8fddaa9f
Revises: 
Create Date: 2018-05-17 17:42:30.748819

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2faa8fddaa9f'
down_revision = None
branch_labels = ('schema',)
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entity_type',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('format',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('potential_outcome',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prerequisite',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.String(length=256), nullable=False),
        sa.Column('type_id', sa.Integer(), nullable=True),
        sa.Column('email', sa.String(length=100), nullable=True),
        sa.Column('url', sa.String(length=100), nullable=True),
        sa.Column('year_incorporated', sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(['type_id'], ['entity_type.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('location',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('organization_id', sa.Integer(), nullable=True),
        sa.Column('alternate_name', sa.String(length=100), nullable=True),
        sa.Column('description', sa.String(length=100), nullable=True),
        sa.Column('transportation', sa.String(length=256), nullable=True),
        sa.Column('latitude', sa.Float(), nullable=True),
        sa.Column('longitude', sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('program',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('cip', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('organization_id', sa.Integer(), nullable=True),
        sa.Column('potential_outcome_id', sa.Integer(), nullable=False),
        sa.Column('prerequisites', sa.Integer(), nullable=False),
        sa.Column('soc_code_1', sa.Integer(), nullable=False),
        sa.Column('soc_code_2', sa.Integer(), nullable=False),
        sa.Column('soc_code_3', sa.Integer(), nullable=False),
        sa.Column('credential_name', sa.String(length=256), nullable=True),
        sa.Column('alternate_name', sa.String(length=100), nullable=True),
        sa.Column('on_etpl', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['potential_outcome_id'], ['potential_outcome.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['prerequisites'], ['prerequisite.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physical_address',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('location_id', sa.Integer(), nullable=True),
        sa.Column('address', sa.String(length=100), nullable=False),
        sa.Column('city', sa.String(length=100), nullable=False),
        sa.Column('state', sa.String(length=20), nullable=False),
        sa.Column('postal_code', sa.String(length=20), nullable=False),
        sa.Column('country', sa.String(length=2), nullable=False),
        sa.ForeignKeyConstraint(['location_id'], ['location.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('status', sa.String(length=30), nullable=False),
        sa.Column('format', sa.Integer(), nullable=False),
        sa.Column('num_hrs', sa.Integer(), nullable=False),
        sa.Column('num_weeks', sa.Integer(), nullable=False),
        sa.Column('description', sa.String(length=200), nullable=True),
        sa.Column('organization_id', sa.Integer(), nullable=True),
        sa.Column('program_id', sa.Integer(), nullable=True),
        sa.Column('email', sa.String(length=100), nullable=True),
        sa.Column('url', sa.String(length=100), nullable=True),
        sa.Column('tuition', sa.Float(), nullable=True),
        sa.Column('materials_cost', sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(['format'], ['format.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['program_id'], ['program.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_location',
        sa.Column('service_id', sa.Integer(), nullable=False),
        sa.Column('location_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
        sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
        sa.PrimaryKeyConstraint('service_id', 'location_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_location')
    op.drop_table('service')
    op.drop_table('physical_address')
    op.drop_table('program')
    op.drop_table('location')
    op.drop_table('organization')
    op.drop_table('prerequisite')
    op.drop_table('potential_outcome')
    op.drop_table('format')
    op.drop_table('entity_type')
    # ### end Alembic commands ###
